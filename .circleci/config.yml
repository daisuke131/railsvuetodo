# version: 2.1

# executors:
#   default_container:
#     docker:
#       - image: circleci/ruby:3.0.1
#         environment:
#           RAILS_ENV: test
#           BUNDLE_JOBS: 4
#           BUNDLE_RETRY: 3
#
#           BUNDLER_VERSION: 2.2.19

#       - image: circleci/mysql:latest
#         command: mysqld --default-authentication-plugin=mysql_native_password
#         environment:
#           MYSQL_ALLOW_EMPTY_PASSWORD: true
#     working_directory: ~/qiita_clone

# commands:
#   install_bundler:
#     description: install bundler
#     steps:
#       - run: gem install bundler -v 2.2.19

# jobs:
#   fetch_source_code:
#     executor:
#       name: default_container
#     steps:
#       - checkout
#       - save_cache:
#           key: v1-qiita_clone-{{ .Environment.CIRCLE_SHA1 }}
#           paths:
#             - ~/qiita_clone

#   bundle_dependencies:
#     executor:
#       name: default_container
#     steps:
#       - restore_cache:
#           key: v1-qiita_clone-{{ .Environment.CIRCLE_SHA1 }}
#       - restore_cache:
#           key: v1-dependencies-{{ checksum "Gemfile.lock" }}

#       - run:
#           name: setup bundler
#           command: |
#             sudo gem uninstall bundler
#             sudo rm /usr/local/bin/bundle
#             sudo rm /usr/local/bin/bundler
#             sudo gem install bundler -v 2.2.19
#       - run:
#           name: Bundle Install Dependencies
#           command: |
#             bundle install
#       - save_cache:
#           key: v1-dependencies-{{ checksum "Gemfile.lock" }}
#           paths:
#             - vendor/bundle

#   rubocop:
#     executor:
#       name: default_container
#     steps:
#       - restore_cache:
#           key: v1-qiita_clone-{{ .Environment.CIRCLE_SHA1 }}
#       - restore_cache:
#           key: v1-dependencies-{{ checksum "Gemfile.lock" }}
#       - install_bundler
#       - run:
#           name: Execute rubocop
#           command: |
#             bundle exec rubocop
#   rspec:
#     executor:
#       name: default_container
#     steps:
#       - restore_cache:
#           key: v1-qiita_clone-{{ .Environment.CIRCLE_SHA1 }}
#       - restore_cache:
#           key: v1-dependencies-{{ checksum "Gemfile.lock" }}

#       - run:
#           name: Watting stand up database
#           command: |
#             dockerize -wait \
#             tcp://127.0.0.1:3306 -timeout 120s
#       # Database setup
#       - run: mv ./config/database.yml.ci ./config/database.yml
#       - install_bundler
#       - run:
#           name: Testing DB migration and seed
#           command: |
#             bundle exec rails db:create db:migrate db:seed db:drop
#       # mkdir directory for upload test results
#       - run: mkdir /tmp/test-results
#       - run: mkdir -p ~/rspec

#       - run:
#           name: Run rspec
#           command: |
#             bundle exec rails db:create db:migrate
#             TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
#             bundle exec rspec --require rails_helper \
#                               --color \
#                               --format progress \
#                               --format RspecJunitFormatter \
#                               --out ~/rspec/rspec.xml
#       # collect reports
#       - store_test_results:
#           path: ~/rspec
#       - store_artifacts:
#           path: ~/tmp/test-results
#           destination: test-results

# workflows:
#   build:
#     jobs:
#       - fetch_source_code
#       - bundle_dependencies:
#           requires:
#             - fetch_source_code
#       - rubocop:
#           requires:
#             - bundle_dependencies
#       - rspec:
#           requires:
#             - bundle_dependencies




version: 2.1  # 2.0以下だとOrbが使用できない

orbs:
  # ruby: circleci/ruby@1.1.2
  ruby: circleci/ruby@1.1.3
  # node: circleci/node@4.2.0
  node: circleci/node@4.5.1
  # heroku: circleci/heroku@1.2.6

jobs:
  build:
    docker:
      # - image: circleci/ruby:3.0.1  # Rubyのバージョンに合わせる
      - image: cimg/ruby:3.0.1
    steps:
      - checkout
      - ruby/install-deps  # => bundle install
      - node/install-packages:
          pkg-manager: yarn  # Rails6ではwebpackerを用いるためyarnのインストールが必要
  test:
    docker:
      # - image: circleci/ruby:2.6.7-node-browsers
      - image: cimg/ruby:3.0.1
        environment:
          RAILS_ENV: test
      - image: circleci/mysql:latest  # MySQLのバージョンに合わせる
        name: db
        command: mysqld --default-authentication-plugin=mysql_native_password  # MySQL8を用いる場合必要
        environment:
          # MYSQL_ROOT_PASSWORD: password
          MYSQL_ALLOW_EMPTY_PASSWORD: true
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      # TZ: Asia/Tokyo # タイムゾーンの設定
    steps:
      - checkout
      - ruby/install-deps:
          # bundler-version: '2.2.19'  # Bundlerのバージョンに合わせる
          bundler-version: '1.15.0'  # Bundlerのバージョンに合わせる
      - node/install-packages:
          pkg-manager: yarn
      - run: sudo apt-get update
      - run: sudo apt-get -y install imagemagick  # carrierwaveで使用するためimagemagickをインストール
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://db:3306 -timeout 1m  # dbコンテナの起動を待つ

      - run: mv ./config/database.yml.ci ./config/database.yml

      - run:
          name: Database setup
          command: |
            bundle exec rails db:create
            bundle exec rails db:schema:load --trace
      - ruby/rspec-test
      - ruby/rubocop-check

workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      # - heroku/deploy-via-git:
      #     requires:
      #       - test
      #     post-steps:
      #       - run:
      #           command: heroku run bundle exec rake db:migrate --app $HEROKU_APP_NAME  # deploy後にdb:migrateを実行
      #     filters:
      #       branches:
      #         only: main
